var searchIndex = {};
searchIndex["lde"] = {"doc":"# Length Disassembler Engine","items":[[3,"x86","lde","Length disassembler for the `x86` instruction set.",null,null],[3,"x64","","Length disassembler for the `x86_64` instruction set.",null,null],[3,"OpCode","","Newtype wrapper for opcode byte slices.",null,null],[12,"0","","",0,null],[3,"LDIter","","Iterator over opcodes in a byte slice.",null,null],[0,"ext","","Experimental extensions.",null,null],[3,"OpCodeBuilder","lde::ext","Unstable helper to construct opcodes from bytes.",null,null],[11,"new","","Create a new opcode of specified length, max 15.",1,{"inputs":[{"name":"u8"}],"output":{"name":"opcodebuilder"}}],[11,"write","","Write a value to the opcode buffer at specified offset.",1,{"inputs":[{"name":"opcodebuilder"},{"name":"usize"},{"name":"t"}],"output":{"name":"opcodebuilder"}}],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[8,"InsnSet","lde","Declares the entry point for an instruction set&#39;s length disassembler.",null,null],[16,"Va","","Virtual address type.",2,null],[10,"ld","","Length disassemble the given bytes.",2,null],[10,"iter","","Create an iterator over the opcodes contained in the byte slice.",2,null],[11,"clone","","",3,{"inputs":[{"name":"x86"}],"output":{"name":"x86"}}],[11,"ld","","",3,null],[11,"iter","","",3,null],[11,"as_va","","",3,{"inputs":[{"name":"usize"}],"output":{"name":"va"}}],[11,"clone","","",4,{"inputs":[{"name":"x64"}],"output":{"name":"x64"}}],[11,"ld","","",4,null],[11,"iter","","",4,null],[11,"as_va","","",4,{"inputs":[{"name":"usize"}],"output":{"name":"va"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opcode"}],"output":{"name":"opcode"}}],[11,"read","","Helper for reading immediates and displacements.",0,{"inputs":[{"name":"opcode"},{"name":"usize"}],"output":{"name":"t"}}],[11,"deref","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"opcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"opcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"lditer"}],"output":{"name":"lditer"}}],[11,"peek","","Length disassemble the current location without advancing the iterator.",5,{"inputs":[{"name":"lditer"}],"output":{"name":"option"}}],[11,"consume","","Skip bytes from the input without length disassembling them.",5,{"inputs":[{"name":"lditer"},{"name":"usize"}],"output":null}],[11,"va","","Get the current virtual address.",5,{"inputs":[{"name":"lditer"}],"output":{"name":"va"}}],[11,"set_va","","Set the current virtual address.",5,{"inputs":[{"name":"lditer"},{"name":"va"}],"output":{"name":"va"}}],[11,"next","","",5,{"inputs":[{"name":"lditer"}],"output":{"name":"option"}}],[11,"deref","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"lditer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"lditer"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"OpCode"],[3,"OpCodeBuilder"],[8,"InsnSet"],[3,"x86"],[3,"x64"],[3,"LDIter"]]};
initSearch(searchIndex);
