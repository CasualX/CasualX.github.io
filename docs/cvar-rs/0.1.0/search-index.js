var searchIndex = {};
searchIndex["cvar"] = {"doc":"Let us use an example to see how cvars might be implemented for it.","items":[[3,"Pass","cvar","Pass through dummy.",null,null],[3,"Error","","Contextual error.",null,null],[12,"id","","Identifier argument.",0,null],[12,"name","","Specific node that triggered the error, this is a substring of `id`.",0,null],[12,"inner","","The actual error.",0,null],[3,"Property","","Property instance.",null,null],[3,"List","","List instance.",null,null],[3,"Context","","Invocation context.",null,null],[12,"args","","The command arguments.",1,null],[12,"write","","A console-like interface.",1,null],[3,"Action","","Action instance.",null,null],[4,"InnerError","","Contextless error.",null,null],[13,"NameError","","Name not found error.",2,null],[13,"ListError","","Node is not a list.",2,null],[13,"PropError","","Node is not a property.",2,null],[13,"ActionError","","Node is not an action.",2,null],[13,"ParseError","","Error parsing the value.",2,null],[13,"ChangeError","","Error validating the value.",2,null],[13,"ConstError","","Cannot modify the cvar.",2,null],[13,"InvokeError","","Error invoking the action.",2,null],[4,"PropState","","Property state.",null,null],[13,"Default","","The property has its default value set.",3,null],[13,"UserSet","","The property has a non-default value.",3,null],[13,"Invalid","","The value is not valid in the current context.",3,null],[4,"Node","","Node interface.",null,null],[13,"Prop","","",4,null],[13,"List","","",4,null],[13,"Action","","",4,null],[0,"console","","Interact with the cvar hierarchy.",null,null],[3,"Walk","cvar::console","Iterator over parent list nodes.",null,null],[5,"set","","Sets a property its value.",null,{"inputs":[{"name":"ivisit"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get","","Gets a property its value.",null,{"inputs":[{"name":"ivisit"},{"name":"str"}],"output":{"name":"result"}}],[5,"reset","","Resets properties to their default.",null,{"inputs":[{"name":"ivisit"},{"name":"str"}],"output":{"name":"result"}}],[5,"reset_all","","Resets all properties to their default.",null,{"inputs":[{"name":"ivisit"}],"output":null}],[5,"default","","Gets a property its default.",null,{"inputs":[{"name":"ivisit"},{"name":"str"}],"output":{"name":"result"}}],[5,"state","","Gets a property its state.",null,{"inputs":[{"name":"ivisit"},{"name":"str"}],"output":{"name":"result"}}],[5,"find","","Finds a cvar by its node identifier and invokes the callback with it.",null,{"inputs":[{"name":"ivisit"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[5,"visit","","Visits all nodes in the cvar hierarchy and invokes the callback with each `Node`.",null,{"inputs":[{"name":"ivisit"},{"name":"f"}],"output":null}],[5,"walk","","Walks the cvar hierarchy while keeping track of the parent context.",null,{"inputs":[{"name":"ivisit"},{"name":"f"}],"output":null}],[5,"invoke","","Invokes an action.",null,{"inputs":[{"name":"ivisit"},{"name":"str"},{"name":"context"}],"output":{"name":"result"}}],[11,"clone","","",5,null],[11,"id","","Builds a complete identifier string.",5,null],[11,"from","","",5,{"inputs":[{"name":"option"}],"output":{"name":"walk"}}],[11,"next","","",5,null],[6,"BoxResult","cvar","Result with boxed error.",null,null],[17,"JOINER","","Identifiers are node names joined with a separator.",null,null],[8,"INode","","Node interface.",null,null],[10,"name","","Returns the node name.",6,null],[10,"description","","Returns the node description.",6,null],[8,"IProperty","","Property node interface.",null,null],[10,"get","","Gets the value as a string.",7,null],[10,"set","","Sets the value.",7,null],[10,"reset","","Resets the value to its default.",7,null],[10,"default","","Gets the default value as a string.",7,null],[10,"state","","Returns the state of the property.",7,null],[8,"Variable","","Abstraction over interior mutability.",null,null],[10,"get","","Gets a clone of the value.",8,null],[10,"set","","Sets a new value.",8,null],[10,"with","","Work with the value without a potentially expensive clone.",8,null],[8,"Value","","Accepted property value types.",null,null],[10,"parse","","",9,{"inputs":[{"name":"str"}],"output":{"name":"boxresult"}}],[10,"to_string","","",9,null],[8,"AutoValue","","Implement [`Value`](trait.Value.html) automatically for types that have appropriate `FromStr` and `ToString` implementations.",null,null],[8,"OnChange","","Property callback when its value is changed.",null,null],[10,"change","","Given the old and assigned values produces the new value.",10,null],[8,"IVisit","","Visitor Pattern interface.",null,null],[10,"visit","","Calls the callback `f` with every child casted as `Node`.",11,null],[8,"IList","","List node interface.",null,null],[10,"as_visit","","Returns the visitor interface to access its children.",12,null],[8,"IAction","","Action node interface.",null,null],[10,"invoke","","Invoke the callback associated with the Action.",13,null],[8,"OnInvoke","","Action callback when invoked.",null,null],[10,"invoke","","",14,null],[11,"eq","","",15,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"cause","","",2,null],[11,"fmt","","",0,null],[11,"new","","",0,{"inputs":[{"name":"str"},{"name":"str"},{"name":"innererror"}],"output":{"name":"error"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"from","","",4,{"inputs":[{"name":"iproperty"}],"output":{"name":"node"}}],[11,"change","","",15,null],[11,"new","","Creates a new `Property`.",16,{"inputs":[{"name":"n"},{"name":"d"},{"name":"v"},{"name":"i"}],"output":{"name":"property"}}],[11,"change","","Creates a new `Property` with [change](trait.OnChange.html) callback.",16,null],[11,"name","","",16,null],[11,"description","","",16,null],[11,"get","","",16,null],[11,"set","","",16,null],[11,"reset","","",16,null],[11,"default","","",16,null],[11,"state","","",16,null],[11,"from","","",4,{"inputs":[{"name":"property"}],"output":{"name":"node"}}],[11,"clone","","",4,null],[11,"name","","",4,null],[11,"description","","",4,null],[11,"fmt","","",4,null],[11,"from","","",4,{"inputs":[{"name":"ilist"}],"output":{"name":"node"}}],[11,"new","","Creates a new `List`.",17,{"inputs":[{"name":"n"},{"name":"d"},{"name":"ivisit"}],"output":{"name":"list"}}],[11,"name","","",17,null],[11,"description","","",17,null],[11,"as_visit","","",17,null],[11,"from","","",4,{"inputs":[{"name":"list"}],"output":{"name":"node"}}],[11,"new","","Constructs a new invocation context.",1,{"inputs":[{"name":"str"},{"name":"write"}],"output":{"name":"context"}}],[11,"from","","",4,{"inputs":[{"name":"iaction"}],"output":{"name":"node"}}],[11,"invoke","","",15,null],[11,"new","","Creates a new `Action`.",18,{"inputs":[{"name":"n"},{"name":"d"},{"name":"f"}],"output":{"name":"action"}}],[11,"name","","",18,null],[11,"description","","",18,null],[11,"invoke","","",18,null],[11,"from","","",4,{"inputs":[{"name":"action"}],"output":{"name":"node"}}]],"paths":[[3,"Error"],[3,"Context"],[4,"InnerError"],[4,"PropState"],[4,"Node"],[3,"Walk"],[8,"INode"],[8,"IProperty"],[8,"Variable"],[8,"Value"],[8,"OnChange"],[8,"IVisit"],[8,"IList"],[8,"IAction"],[8,"OnInvoke"],[3,"Pass"],[3,"Property"],[3,"List"],[3,"Action"]]};
initSearch(searchIndex);
